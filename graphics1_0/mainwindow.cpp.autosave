//cmyk 19 19 19 19 - nan

#include "mainwindow.h"
#include "ui_mainwindow.h"
#include <QColorDialog>
#include <QDebug>
#include <algorithm>
#include <qmath.h>
#include <QPainter>
#include <QMessageBox>
MainWindow::MainWindow(QWidget *parent)
    : QMainWindow(parent)
    , ui(new Ui::MainWindow)
{
    ui->setupUi(this);
    setFixedSize(700, 700);
}

MainWindow::~MainWindow()
{
    delete ui;
}


void MainWindow::on_paletteBut_clicked()
{
    col = QColorDialog::getColor(col);
    ui->color16->setText(col.name());
}


void MainWindow::paintEvent(QPaintEvent *)
{
    QPainter ptr(this);
    ptr.setPen(col);
    QPainterPath path;
    path.addRoundedRect(QRectF(300, 350, 100, 100), 10, 10);
    ptr.fillPath(path, col);
}

double MainWindow::F_rgb_xyz(double x)
{
    if(x >= 0.04045){
        x += 0.055;
        x /= 1.055;
        x = qPow(x, 2.4);
    } else {
        x /= 12.92;
    }
    return x;
}

double MainWindow::F_xyz_rgb(double x)
{
    if(x - 0.0031308 >= 0.0000000001){
        x = 1.055 * pow(x, 1.0/2.4) - 0.055;
        return x;
    } else {
        return 12.92 * x;
    }
}

double MainWindow::F_xyz_lab(double x)
{
    if(x >= 0.008856){
        x = qPow(x, 1.0/3.0);
    } else {
        x = 7.787 * x + 16.0/116.0;
    }
    return x;
}

double MainWindow::F_lab_xyz(double x)
{
    if(x * x * x >= 0.008856){
        x = x * x * x;
    } else {
        x = (x - 16.0/116.0)/7.787;
    }
    return x;
}

void MainWindow::hsv_rgb()
{
    double C = v3/100.0 * s3/100.0;
    double X = C * (1 - abs((h3/60) % 2 - 1));
    double M = v3/100.0 - C;
    double R, G, B;
    if(0 <= h3 && h3 <= 60){
        R = C;
        G = X;
        B = 0;
    }
    if(60 <= h3 && h3 < 120){
        R = X;
        G = C;
        B = 0;
    }
    if(120 <= h3 && h3 < 180){
        R = 0;
        G = C;
        B = X;
    }
    if(180 <= h3 && h3 < 240){
        R = 0;
        G = X;
        B = C;
    }
    if(240 <= h3 && h3 < 300){
        R = X;
        G = 0;
        B = C;
    }
    if(300 <= h3 && h3 < 360){
        R = C;
        G = 0;
        B = X;
    }
    r = (R + M)*255.0;
    g = (G + M)*255.0;
    b = (B + M)*255.0;
    qDebug() << C << " " << X << " " << M;
    qDebug() << "!!!!! " << r << ' ' << g << ' ' << b;
    ui->rgbText->setText(QString::number(r) + " " + QString::number(g) + " " + QString::number(b));
}

void MainWindow::rgb_hsv()
{
    double R = r/255.0;
    double G = g/255.0;
    double B = b / 255.0;
    double Cmax = std::max(std::max(R, G), B);
    double Cmin = std::min(std::min(R, G), B);
    double delta = Cmax-Cmin;
    v3 = Cmax;
    if(delta == 0){
        h3 = 0;
    }
    if(Cmax == R){
        h3 = 60 * (int((G - B)/delta)%6);
    } else
        if(Cmax == G){
            h3 = 60 * ((B - R)/delta + 2);
        }else
            if(Cmax == B){
                h3 = 60 * ((R - G)/delta + 4);
            }
    if(Cmax != 0){
        s3 = delta/(Cmax);
    }
    if(Cmax == 0){
        s3 = 0;
    }
    ui->hsvText->setText(QString::number(round(h3)) + " " + QString::number(round(s3 * 100.0)) + " " + QString::number(round(v3 * 100.0)));
}

void MainWindow::rgb_cmyk()
{
    k = __min(1-r/255.0, __min(1-g/255.0, 1-b/255.0));
    c =  k != 1 ? (1 - r/255.0-k)/(1 - k) : 0;
    m = k != 1 ? (1 - g/255.0-k)/(1 - k) : 0;
    y = k != 1 ? (1 - b/255.0-k)/(1 - k) : 0;
    ui->cmykText->setText(QString::number(round(c * 100)) + " " + QString::number(round(m*100)) + " " +
                          QString::number(round(y*100)) + " " + QString::number(round(k*100)) + "");
    // qDebug() << "cmyk " << c << ' ' << m << ' ' << y << ' ' << k;

}

void MainWindow::rgb_xyz()
{
    double Rn = F_rgb_xyz(r / 255.0)*100;
    double Gn = F_rgb_xyz(g / 255.0)*100;
    double Bn = F_rgb_xyz(b / 255.0)*100;
    x1 = 0.412453*Rn + 0.357580*Gn + 0.180423*Bn;
    y1 = 0.212671*Rn + 0.715160*Gn + 0.072169*Bn;
    z1 = 0.019334*Rn + 0.119193*Gn + 0.950227*Bn;
    ui->xyzText->setText(QString::number(round(x1)) + " " + QString::number(round(y1)) + " " + QString::number(round(z1)));
    //qDebug() << "xyz " << x1 << ' ' << y1 << ' ' << z1;

}

void MainWindow::xyz_lab()
{
    double XW = 95.047;
    double YW = 100;
    double ZW = 108.883;
    l1 = 116 * F_xyz_lab(y1 / YW)-16;
    a1 = 500 * (F_xyz_lab(x1 / XW) - F_xyz_lab(y1 / YW));
    b1 = 200 * (F_xyz_lab(y1 / YW) - F_xyz_lab(z1 / ZW));
    ui->labText->setText(QString::number(round(l1)) + " " + QString::number(round(a1)) + " " + QString::number(round(b1)));
    // qDebug() << "lab " << l1 << ' ' << a1 << ' ' << b1;
}

void MainWindow::xyz_rgb()
{
//    double RN = 3.2406*x1/100.0 - 1.5372*y1/100.0 - 0.4986*z1/100.0;
//    double GN = -0.9689*x1/100.0 +  1.8758*y1/100.0 + 0.0415*z1/100.0;
//    double BN = 0.0557*x1/100.0 - 0.2040*y1/100.0 + 1.0570*z1/100.0;
//    int R = F_xyz_rgb(RN)*255.0;
//    int G = F_xyz_rgb(GN)*255.0;
//    int B = F_xyz_rgb(BN)*255.0;
//    qDebug() << "XYZ RGB " << R << " " << G << " " << B;
//    if(R > 255 || R < 0 || G > 255 || G < 0 || B > 255 || B < 0){
//        QMessageBox::critical(NULL,QObject::tr("Ошибка"),tr("Все, пипец, все рухнуло )"));
//        rgb_xyz();
//    } else {
//        r = R;
//        g = G;
//        b = B;
//        ui->rgbText->setText(QString::number(r) + " " + QString::number(g) + " " + QString::number(b));
//    }
        double var_X = x1/ 100;
        double var_Y = y1 / 100;
        double var_Z = z1 / 100;

        double var_R = var_X * 3.2406 + var_Y * -1.5372 + var_Z * -0.4986;
        double var_G = var_X * -0.9689 + var_Y * 1.8758 + var_Z * 0.0415;
        double var_B = var_X * 0.0557 + var_Y * -0.2040 + var_Z * 1.0570;

        if ( var_R > 0.0031308 ) var_R = 1.055 * ( pow(var_R, ( 1 / 2.4 )) ) - 0.055;
        else var_R = 12.92 * var_R;
        if ( var_G > 0.0031308 ) var_G = 1.055 * ( pow(var_G, ( 1 / 2.4 )) ) - 0.055;
        else var_G = 12.92 * var_G;
        if ( var_B > 0.0031308 ) var_B = 1.055 * ( pow(var_B, ( 1 / 2.4 )) ) - 0.055;
        else var_B = 12.92 * var_B;
        if(var_R * 255 > 255 || var_R * 255 < 0 || var_G * 255 > 255 || var_G * 255 < 0 || var_B * 255 > 255 || var_B * 255 < 0){
            QMessageBox::critical(NULL,QObject::tr("Ошибка"),tr("Все, пипец, все рухнуло )"));
            rgb_xyz();
        } else {
            r = var_R * 255;
            g = var_G * 255;
            b = var_B * 255;
            ui->rgbText->setText(QString::number(r) + " " + QString::number(g) + " " + QString::number(b));
        }

}

void MainWindow::cmyk_rgb()
{
    r = (1 - c)*(1 - k)*255;
    g = (1 - m)*(1 - k)*255;
    b = (1 - y)*(1 - k)*255;
    ui->rgbText->setText(QString::number(r) + " " + QString::number(g) + " " + QString::number(b));
    //qDebug() << "cmyk! " << c << ' ' << m << ' ' << y << ' ' << k;
    // qDebug() << "rgb! " << r << ' ' << g << ' ' << b;
}

void MainWindow::rgb_hsl()
{
    double R = r/255.0;
    double G = g/255.0;
    double B = b / 255.0;
    double Cmax = std::max(std::max(R, G), B);
    double Cmin = std::min(std::min(R, G), B);
    double delta = Cmax-Cmin;
    l2 = (Cmax + Cmin) / 2.0;
    if(delta < 1.e-6){
        h2 = 0;
        s2 = 0;
    }
    if(Cmax == R){
        h2 = 60 * (int((G - B)/delta)%6);
    }
    if(Cmax == G){
        h2 = 60.0 * ((B - R)/delta + 2);
    }
    if(Cmax == B){
        h2 = 60.0 * ((R - G)/delta + 4);
    }
    if(delta > 1.e-6){
        s2 = delta/(1 - abs(2.0 * l2 - 1));
    }
    ui->hslText->setText(QString::number(round(h2)) + " " + QString::number(round(l2 * 100.0)) + " " + QString::number(round(s2* 100.0)));
}

void MainWindow::hsl_rgb()
{
    double C = (1 - abs(2*(l2/100.0) - 1))*s2/100.0;
    double X = C * (1 - abs(int(h2/60) % 2 - 1));
    double M = l2/100.0 - C / 2;
    double R, G, B;
    if(0 <= h2 && h2 <= 60){
        R = C;
        G = X;
        B = 0;
    }
    if(60 <= h2 && h2 < 120){
        R = X;
        G = C;
        B = 0;
    }
    if(120 <= h2 && h2 < 180){
        R = 0;
        G = C;
        B = X;
    }
    if(180 <= h2 && h2 < 240){
        R = 0;
        G = X;
        B = C;
    }
    if(240 <= h2 && h2 < 300){
        R = X;
        G = 0;
        B = C;
    }
    if(300 <= h2 && h2 < 360){
        R = C;
        G = 0;
        B = X;
    }
    r = (R + M)*255.0;
    g = (G + M)*255.0;
    b = (B + M)*255.0;
    qDebug() << "!!!!! " << r << ' ' << g << ' ' << b;
    ui->rgbText->setText(QString::number(r) + " " + QString::number(g) + " " + QString::number(b));
}

void MainWindow::lab_xyz()
{
    double Xw = 95.047;
    double Yw = 100.0;
    double Zw = 108.883;
    y1 = F_lab_xyz((l1 + 16.0)/116.0)*Xw;
    x1 = F_lab_xyz(a1 / 500.0 + (l1 + 16.0)/116.0)*Yw;
    z1 = F_lab_xyz((l1 + 16.0)/116.0 - b1/200.0) * Zw;
    ui->xyzText->setText(QString::number(round(x1)) + " " + QString::number(round(y1)) + " " + QString::number(round(z1)));
}

void MainWindow::find_lab(QString s)
{
    std::vector < int > v;
    QString cur = "";
    for(int i = 0; i < s.size(); i++){
        if(s[i] != ' '){
            cur += s[i];
        } else {
            v.push_back(cur.toInt());
            cur = "";
        }
    }
    l1 = v[0];
    a1 = v[1];
    b1 = cur.toInt();
}

void MainWindow::find_hsl(QString s)
{
    std::vector < int > v;
    QString cur = "";
    for(int i = 0; i < s.size(); i++){
        if(s[i] != ' '){
            cur += s[i];
        } else {
            v.push_back(cur.toInt());
            cur = "";
        }
    }
    h2 = v[0];
    l2 = v[1];
    s2 = cur.toInt();
}

void MainWindow::find_hsv(QString s)
{
    std::vector < int > v;
    QString cur = "";
    for(int i = 0; i < s.size(); i++){
        if(s[i] != ' '){
            cur += s[i];
        } else {
            v.push_back(cur.toInt());
            cur = "";
        }
    }
    h3 = v[0];
    s3 = v[1];
    v3 = cur.toInt();
}

void MainWindow::find_rgb(QString s)
{
    std::vector < int > v;
    QString cur = "";
    for(int i = 0; i < s.size(); i++){
        if(s[i] != ' '){
            cur += s[i];
        } else {
            v.push_back(cur.toInt());
            cur = "";
        }
    }
    r = v[0];
    g = v[1];
    b = cur.toInt();
}

void MainWindow::find_cmyk(QString s)
{
    std::vector < int > v;
    QString cur = "";
    for(int i = 0; i < s.size(); i++){
        if(s[i] != ' '){
            cur += s[i];
        } else {
            v.push_back(cur.toInt());
            cur = "";
        }
    }
    c = v[0]/100.0;
    m = v[1]/100.0;
    y = v[2]/100.0;
    k = cur.toInt()/100.0;
}

void MainWindow::find_xyz(QString s)
{
    std::vector < int > v;
    QString cur = "";
    for(int i = 0; i < s.size(); i++){
        if(s[i] != ' '){
            cur += s[i];
        } else {
            v.push_back(cur.toInt());
            cur = "";
        }
    }
    x1 = v[0];
    y1 = v[1];
    z1 = cur.toInt();
}


void MainWindow::on_rgbText_textChanged()
{

}

void MainWindow::on_rgbBtn_clicked()
{
    find_rgb(ui->rgbText->toPlainText());
    col.setRgb(r, g, b);
    repaint();
    ui->color16->setText(col.name());
    rgb_cmyk();
    rgb_xyz();
    xyz_lab();
    rgb_hsl();
    rgb_hsv();
}

void MainWindow::on_cmykBtn_clicked()
{
    find_cmyk(ui->cmykText->toPlainText());
    qDebug() << c << " " << m << " " << y << " " << k;
    cmyk_rgb();
    col.setRgb(r, g, b);
    repaint();
    rgb_xyz();
    xyz_lab();
    rgb_hsl();
    rgb_hsv();
    ui->color16->setText(col.name());
}

void MainWindow::on_btn16_clicked()
{
    QString s = ui->color16->toPlainText();
    col = s;
    r = ((col.rgb() >> 16)& 0xFF);
    g = ((col.rgb() >> 8)& 0xFF);
    b = ((col.rgb() >> 0)& 0xFF);
    repaint();
    ui->rgbText->setText(QString::number(r) + " " + QString::number(g) + " " + QString::number(b));
    rgb_cmyk();
    rgb_xyz();
    xyz_lab();
    rgb_hsl();
    rgb_hsv();
}

void MainWindow::on_xyzBtn_clicked()
{
    find_xyz(ui->xyzText->toPlainText());
    xyz_rgb();
    qDebug() << x1 << ' ' << y1 << " " << z1;
    qDebug() << r << " " << g << " " << b;
    col.setRgb(r, g, b);
    rgb_cmyk();
    xyz_lab();
    rgb_hsl();
    rgb_hsv();
    repaint();
    ui->color16->setText(col.name());
}

void MainWindow::on_hlsBtn_clicked()
{
    find_hsl(ui->hslText->toPlainText());
    hsl_rgb();
    col.setRgb(r, g, b);
    rgb_cmyk();
    rgb_xyz();
    xyz_lab();
    repaint();
    rgb_hsv();
    ui->color16->setText(col.name());
}

void MainWindow::on_hsvBtn_clicked()
{
    find_hsv(ui->hsvText->toPlainText());
    hsv_rgb();
    col.setRgb(r, g, b);
    rgb_cmyk();
    rgb_xyz();
    xyz_lab();
    repaint();
    rgb_hsl();
    ui->color16->setText(col.name());
}

void MainWindow::on_labBtn_clicked()
{
    find_lab(ui->labText->toPlainText());
    lab_xyz();
    xyz_rgb();
    col.setRgb(r, g, b);
    rgb_cmyk();
    repaint();
    rgb_hsl();
    rgb_hsv();
    ui->color16->setText(col.name());
}
